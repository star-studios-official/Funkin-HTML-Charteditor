# Builds the game on all platforms, to ensure it compiles on all target platforms.
# This helps to ensure workers focus on the master branch.

name: Build and Upload nightly game builds (w/o Changes)

on:
  workflow_dispatch:
    inputs:
      build-defines:
        type: string
        description: Build defines to use
        default: '-DGITHUB_BUILD'
      save-artifact:
        type: boolean
        description: Save the build artifact to Github Actions (sends to itch otherwise)
        default: false
  push:

jobs:


  build-game-on-host:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: windows
            runs-on: windows
          - target: macos
            runs-on: macos
          # TODO: Install XCode to build iOS
          # - target: ios
          #   runs-on: macos
    runs-on:
      - ${{ matrix.runs-on }}
    defaults:
      run:
        shell: bash
    env:
      BUILD_DEFINES: ${{ github.event.inputs.build-defines || '-DGITHUB_BUILD' }}
    steps:
      - name: Make git happy
        run: |
          git config --global --replace-all safe.directory $GITHUB_WORKSPACE
      - name: Get checkout token
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
          owner: ${{ github.repository_owner }}
      - name: Checkout repo
        uses: funkincrew/ci-checkout@v7.3.3
        with:
          submodules: 'recursive'
          token: ${{ steps.app_token.outputs.token }}
          persist-credentials: false
          submodule-aliases: |
            https://github.com/FunkinCrew/Funkin.assets > https://github.com/FunkinCrew/Funkin-assets-secret
            https://github.com/FunkinCrew/Funkin.art > https://github.com/FunkinCrew/Funkin-art-secret
      - name: Setup build environment
        uses: ./.github/actions/setup-haxe
        with:
          gh-token: ${{ steps.app_token.outputs.token }}
      - name: Setup HXCPP dev commit
        run: |
          cd .haxelib/hxcpp/git/tools/hxcpp
          haxe compile.hxml
          cd ../../../../..
      - name: Build game (windows)
        if: ${{ matrix.target == 'windows' }}
        run: |
          haxelib run lime build windows -v -release $BUILD_DEFINES
        timeout-minutes: 120
      - name: Build game (unix)
        if: ${{ matrix.target != 'windows' }}
        run: |
          haxelib run lime build html5 -v -release --times $BUILD_DEFINES
        timeout-minutes: 120
      - name: Save build artifact to Github Actions
        if: ${{ github.event.inputs.save-artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: export/release/${{matrix.target}}/bin/
      - name: Upload build artifacts
        uses: ./.github/actions/upload-itch
        with:
          butler-key: ${{ secrets.BUTLER_API_KEY}}
          target: ${{ matrix.target }}
